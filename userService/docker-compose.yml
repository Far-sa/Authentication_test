version: "3.9"

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_app
    restart: always
    ports:
      - "3306:3306"  # MySQL default port
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
    volumes:
      - ./data/mysql/app_data:/var/lib/mysql
      #- dbdata:/var/lib/mysql

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmqApp
    ports:
      - "5672:5672"  # RabbitMQ default port
      - "15672:15672"  # RabbitMQ management plugin
    environment:
      RABBITMQ_DEFAULT_USER: puppet
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_HOST: localhost
      RABBITMQ_VHOST: "users"

    volumes:
      - ./data/rabbitmq-data:/var/lib/rabbitmq 

  
  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
      - ./data/metrics/prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    ports:
      - 9100:9100
    restart: always
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager
    restart: always
    ports:
      - 9093:9093
    volumes:
      - ./data/metrics/alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana
    user: '472'
    restart: always
    environment:
      GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-simple-json-datasource'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./data/metrics/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./infrastructure/prometheus-grafana/grafana/config.monitoring
    ports:
      - 3000:3000
    depends_on:
      - prometheus

volumes:
  prometheus_data: {}
  grafana_data: {}

# version: '3'

# services:
#   golang-service:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     labels:
#       - "traefik.enable=true"
#       - "traefik.http.routers.golang-service.rule=Host(`example.com`) && PathPrefix(`/`)"
#       - "traefik.http.services.golang-service.loadbalancer.server.port=8080"
#     depends_on:
#       - database
#       - rabbitmq
#       - prometheus

#   database:
#     image: mysql:latest
#     environment:
#       MYSQL_ROOT_PASSWORD: example
#       MYSQL_DATABASE: mydatabase

#   rabbitmq:
#     image: rabbitmq:latest

#   prometheus:
#     image: prom/prometheus:latest
#     ports:
#       - "9090:9090"
#     volumes:
#       - ./prometheus:/etc/prometheus
#     command:
#       - '--config.file=/etc/prometheus/prometheus.yml'
#     depends_on:
#       - cadvisor

#   cadvisor:
#     image: google/cadvisor:latest
#     ports:
#       - "8081:8080"
#     volumes:
#       - /:/rootfs:ro
#       - /var/run:/var/run:rw
#       - /sys:/sys:ro
#       - /var/lib/docker/:/var/lib/docker:ro

#   alertmanager:
#     image: prom/alertmanager:latest
#     ports:
#       - "9093:9093"
#     volumes:
#       - ./alertmanager:/etc/alertmanager
#     command:
#       - '--config.file=/etc/alertmanager/alertmanager.yml'

#   grafana:
#     image: grafana/grafana:latest
#     ports:
#       - "3000:3000"
#     environment:
#       - GF_SECURITY_ADMIN_PASSWORD=admin
#     volumes:
#       - ./grafana:/var/lib/grafana