name: User Service CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build User Service Docker image
        run: docker build -t user-service .

  test:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run User Service tests
        run: |
          # Command to run tests

  deploy:
    runs-on: ubuntu-latest

    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy User Service to testing environment
        run: |
          # Command to deploy to testing environment

####
# name: GoLang CI/CD

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Set up Go
#         uses: actions/setup-go@v2
#         with:
#           go-version: 1.17

#       - name: Install dependencies
#         run: go mod download

#       - name: Build microservice
#         run: go build -o myservice

#   test:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         go-version: [1.15, 1.16, 1.17]

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Set up Go
#         uses: actions/setup-go@v2
#         with:
#           go-version: ${{ matrix.go-version }}

#       - name: Install dependencies
#         run: go mod download

#       - name: Run unit tests
#         run: go test -v ./...

#   deploy:
#     runs-on: ubuntu-latest
#     needs: [build, test]

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Deploy to production
#         # Add deployment steps here, such as deploying to Kubernetes or a server
#         run: |
#           echo "Deploying microservice to production..."


######
# name: GoLang CI/CD

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Set up Go
#         uses: actions/setup-go@v2
#         with:
#           go-version: 1.17

#       - name: Install dependencies
#         run: go mod download

#       - name: Build microservice
#         run: go build -o myservice

#   test:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         split: [1, 2, 3] # Adjust the number of splits based on the amount of tests

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Set up Go
#         uses: actions/setup-go@v2
#         with:
#           go-version: 1.17

#       - name: Install dependencies
#         run: go mod download

#       - name: Run unit tests - Split ${{ matrix.split }}
#         run: go test -v ./... -count=1 -parallel ${{ matrix.split }}

#   deploy:
#     runs-on: ubuntu-latest
#     needs: [build, test]

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Deploy to production
#         # Add deployment steps here, such as deploying to Kubernetes or a server
#         run: |
#           echo "Deploying microservice to production..."
