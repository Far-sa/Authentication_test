apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-credentials
  namespace: microservices
type: Opaque
data:
  username: cHVwcGV0 # echo -n 'rabbit_user' | base64
  password: cGFzc3dvcmQ=

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service  # Replace with your desired service name
  namespace: microservices
spec:
  type: ClusterIP
  selector:
    app: rabbitmq
  ports:
    - name: http
      protocol: TCP
      port: 15672
      targetPort: 15672
    - name: amqp
      protocol: TCP
      port: 5672
      targetPort: 5672
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: microservices
spec:
  serviceName: "not-applicable"
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.12-management
          ports:
          - name: http
            protocol: TCP
            containerPort: 15672
          - name: amqp
            protocol: TCP
            containerPort: 5672
          env:
            - name: RABBITMQ_HOST
              value: "rabbitmq-service"
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: username
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: password
          volumeMounts:
            - mountPath: "/var/lib/rabbitmq"
              name: rabbitmq-data
      # volumes:
      #   - name: rabbitmq-volume
      #     persistentVolumeClaim:
      #       claimName: rabbitmq-pvc
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-data
    spec:
      #storageClassName: sc-local
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
